---
import { Image } from "astro:assets";
import { externalLinks } from "consts";
import { isVideo } from "@lib/utils";

export interface MediaProps {
    media: Array<string>;
    content?: {
        header?: string;
        description?: string;
    };
}
let activeMedia: number = 0;
const { media, content } = Astro.props as MediaProps;
---

<section
    class="relative overflow-hidden scroll-mt-24 bg-gradient-default"
    id="home"
>
    <div id="media" data-media={JSON.stringify(media)}>
        {
            isVideo(media[activeMedia]) ? (
                <video
                    id="carouselVideo"
                    class="w-full h-screen object-cover transition-opacity duration-500 opacity-100"
                    autoplay
                    muted
                    playsinline
                    src={media[activeMedia]}
                    transition:persist
                />
            ) : (
                <Image
                    id="carouselImage"
                    class="w-full h-screen object-cover transition-opacity duration-500 opacity-100"
                    src={media[activeMedia]}
                    alt="MOSTAVIO HERO"
                />
            )
        }
    </div>
    <div class="absolute inset-0 top-1/4 text-center mx-auto">
        <h2
            class="m-4 md:m-8 text-gray-900 dark:text-white font-bold text-4xl sm:text-5xl md:text-6xl"
        >
            {content?.header || "Experience the Future of Flight"}
        </h2>
        <div class="text-gray-900 dark:text-white m-auto py-4 max-w-xl">
            {
                content?.description ||
                    "Transforming Urban Air Mobility with Next-Generation eVTOL Technology"
            }
        </div>
    </div>

    <div
        class="absolute bottom-24 left-1/2 transform -translate-x-1/2 space-x-2 z-10"
    >
        {
            media.map((_, index) => (
                <button
                    class={`swiper-pagination-bullet inline-block h-2 w-2 rounded-full bg-white ${index === activeMedia ? "swiper-pagination-bullet-active" : ""}`}
                    data-index={index}
                />
            ))
        }
    </div>
    <div
        class="absolute bottom-8 md:bottom-24 right-8 md:right-20 text-gray-950 dark:text-white flex gap-4 z-10"
    >
        {
            externalLinks.map((item, index) => (
                <button class="relative align-middle select-none" type="button">
                    <item.icon />
                </button>
            ))
        }
    </div>
    <script>
        import { isVideo } from "@lib/utils"; // this js is for runtime; above it is for build time
        const wrapperElement = document.getElementById("media");
        const imageElement: HTMLImageElement = document.getElementById(
            "carouselImage",
        ) as HTMLImageElement;
        const dots = document.querySelectorAll(".swiper-pagination-bullet");
        const media = JSON.parse(wrapperElement.getAttribute("data-media"));
        let activeMedia = 0;
        let timeoutId;

        function updateMedia() {
            clearTimeout(timeoutId);
            if (isVideo(media[activeMedia])) {
                const videoElement: HTMLVideoElement = document.getElementById(
                    "carouselVideo",
                ) as HTMLVideoElement;
                videoElement.classList.add("blur");
                setTimeout(() => {
                    videoElement.src = media[activeMedia];
                    videoElement.load();
                    dots.forEach((dot, index) => {
                        dot.classList.toggle(
                            "swiper-pagination-bullet-active",
                            activeMedia === index,
                        );
                    });
                }, 250);
                videoElement.classList.remove("blur");
            } else {
                imageElement.src = media[activeMedia];
                timeoutId = setTimeout(nextMedia, 2000);
            }
        }

        function nextMedia() {
            activeMedia = (activeMedia + 1) % media.length;
            updateMedia();
        }

        dots.forEach((dot, index) => {
            dot.addEventListener("click", () => {
                activeMedia = Number(dot.getAttribute("data-index"));
                updateMedia();
            });
        });
        videoElement.addEventListener("ended", nextMedia);
    </script>
</section>

<style is:global>
    .blur {
        filter: blur(5px);
    }
    section.bg-gradient-default {
        position: relative;
    }
    section.bg-gradient-default::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 20%;
        background: linear-gradient(to bottom, rgb(12 11 10), rgba(0, 0, 0, 0));
    }
    section.bg-gradient-default::after {
        content: "";
        position: absolute;
        bottom: 0;
        left: 0;
        width: 100%;
        height: 25%;
        background: linear-gradient(to top, rgb(12 11 10), rgba(0, 0, 0, 0));
    }
    .swiper-button::after {
        font-size: 32px;
        color: rgb(215, 119, 22);
    }
    .swiper-pagination-bullet:not(.swiper-pagination-bullet-active) {
        background: #fff;
        opacity: 0.5;
    }
</style>
