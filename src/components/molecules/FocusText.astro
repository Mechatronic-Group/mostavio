---
import Container from "./Container.astro";
import { cn } from "@lib/utils";
import Frame from "./Frame.astro";
import { button } from "@tailus/themer-button";
import Button from "@components/atoms/Button.astro";

interface FocusTextProps {
    tagline?: string;
    header?: string;
    subheader?: string;
    description?: string | [string];
    link?: string;
    ctaLabel?: string;
    contentClass?: string;
    containerClass?: string;
}

const {
    tagline,
    header,
    subheader,
    description,
    link,
    contentClass,
    containerClass,
    ctaLabel = "Learn More",
} = Astro.props as FocusTextProps;
---

<section>
    <Container>
        <div class={`relative ${containerClass}`}>
            <div
                class={`my-12 m-auto text-center ${header ? "space-y-12" : "space-y-4"} ${contentClass}`}
            >
                {tagline && <p class="uppercase">{tagline}</p>}
                {
                    header && (
                        <h2 class="text-4xl font-bold text-gray-800 dark:text-white md:text-6xl">
                            {header}
                        </h2>
                    )
                }
                {
                    subheader && (
                        <h6 class="text-2xl font-bold text-gray-800 dark:text-white md:text-3xl">
                            {subheader}
                        </h6>
                    )
                }
                {
                    description && (
                        <div class="text-lg text-gray-600 dark:text-gray-300 space-y-4">
                            <Fragment set:html={description} />
                        </div>
                    )
                }
                <slot />
                <!-- {
                    link && (
                        <div class="mt-8 flex flex-wrap justify-center gap-y-4 gap-x-6">
                            <Frame>
                                <a
                                    href={link}
                                    target="_blank"
                                    class={cn(
                                        button.neutral?.lg,
                                        "pb-[1px]",
                                        "relative z-[1]",
                                    )}
                                >
                                    {ctaLabel}
                                </a>
                            </Frame>
                        </div>
                    )
                } -->
                {link && <Button link={link} ctaLabel={ctaLabel} />}
            </div>
        </div>
    </Container>
</section>
