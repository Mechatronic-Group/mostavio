---
import Container from "./molecules/Container.astro";
import Headline from "./atoms/Headline.astro";
import PaintedImage from "./atoms/PaintedImage.astro";
import { Image } from "astro:assets";
import AwardsCTA from "./molecules/AwardsCTA.astro";

// Assets
import CarIcon from "../assets/v2/aircrafts/CarIcon.png";
import EvtolIcon from "../assets/v2/aircrafts/EvtolIcon.png";
import BusIcon from "../assets/v2/aircrafts/BusIcon.png";
import AVBadge from "../assets/v2/AV_TransparentBadge.png";

import Slide1 from "../assets/v2/aircrafts/slider/Slide1.png";
import Slide2 from "../assets/v2/aircrafts/slider/Slide2.png";
import Slide3 from "../assets/v2/aircrafts/slider/Slide3.png";
import Slide4 from "../assets/v2/aircrafts/slider/Slide4.png";

import TorontoMapMini from "../assets/v2/aircrafts/TorontoMapMini.png";
import EvtolComingSoon from "../assets/v2/aircrafts/Evtol_ComingSoon.png";



interface ImageMetadata {
    src: any;
    alt?: string;
}

interface TimeStatsProps {
    drone: string;
    car: string;
    bus: string;
}

interface AircraftsSectionProps {
    id?: string;
    contentClass?: string;
    tagline?: string;
    headline: string;
    description: string;
    images?: ImageMetadata[];
    awardImages?: ImageMetadata[];
    stats?: TimeStatsProps;
    comingSoon?: boolean;
}

const defaultImages: ImageMetadata[] = [
    { src: Slide1, alt: "Mostavio Design Image" },
    { src: Slide2, alt: "Mostavio Tail and CNC Machine" },
    { src: Slide3, alt: "Mostavio Design and Battery pack" },
    { src: Slide4, alt: "Mostavio top view and Production" },
];

const overlayHeader = [
    {
        header: "150 MPH",
        subtitle: "Top Speed",
    },
    {
        header: "200 MILES",
        subtitle: "Max Range",
    },
    {
        header: "30 MIN",
        subtitle: "Charging Time",
    },
    {
        header: "1 PAX",
        subtitle: "Capacity",
    },
]

const defaultStats = {
    drone: "10",
    car: "38",
    bus: "47",
};

const {
    id,
    contentClass = "",
    tagline,
    headline,
    description,
    images = defaultImages,
    awardImages=[],
    stats = defaultStats,
    comingSoon = false,
} = Astro.props as AircraftsSectionProps;
---

<section id={id} class="scroll-mt-24">
    <Container>
        <div
            class={`flex flex-col justify-between ${contentClass}`}
        >
            <div class="">
                <p class="uppercase">{tagline}</p>
                <Headline className="text-2xl md:text-5xl" headline={headline} />
            </div>
            <div class="pt-4">{description}</div>
        </div>

        {
            !comingSoon && (
                <div class="relative my-24">
                    <button 
                        id="scroll-left"
                        class="cursor-pointer absolute left-4 top-1/3 -translate-y-1/2 z-10 bg-black/70 hover:bg-black/90 text-white p-3 rounded-full transition-all duration-300 opacity-50 hover:opacity-100 backdrop-blur-sm"
                        aria-label="Scroll left"
                    >
                        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
                        </svg>
                    </button>
                    
                    <button 
                        id="scroll-right"
                        class="cursor-pointer absolute right-4 top-1/3 -translate-y-1/2 z-10 bg-black/70 hover:bg-black/90 text-white p-3 rounded-full transition-all duration-300 opacity-50 hover:opacity-100 backdrop-blur-sm"
                        aria-label="Scroll right"
                    >
                        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                        </svg>
                    </button>

                    <div 
                        id="horizontal-scroll-container"
                        class="overflow-x-auto scrollbar-hide horizontal-scroll scroll-smooth"
                    >
                        <div class="flex gap-4">
                            {images.map((image, index) => (
                                <div class="relative flex-shrink-0">
                                    <Image
                                        src={image.src}
                                        alt={image.alt || "Aircraft Image"}
                                        class="w-auto h-96 object-cover pointer-events-none opacity-70"
                                    />
                                    {overlayHeader[index] && (
                                        <div class="absolute inset-0 flex items-center justify-center">
                                            <div class="text-center text-white">
                                                <div class="relative flex items-center mb-4">
                                                    <div class="flex-grow border-t border-gray-300"></div>
                                                    <div class="mx-4">
                                                        <Image
                                                            src={AVBadge}
                                                            alt="AV Badge"
                                                            class="h-6 w-auto"
                                                        />
                                                    </div>
                                                    <div class="flex-grow border-t border-gray-300"></div>
                                                </div>
                                                <h3 class="text-4xl md:text-6xl my-7 font-bold">{overlayHeader[index].header}</h3>
                                                <p class="text-gray-300 font-extralight text-5xl">{overlayHeader[index].subtitle}</p>
                                            </div>
                                        </div>
                                    )}
                                </div>
                            ))}
                        </div>
                    </div>
                    <AwardsCTA awardImages={awardImages} />
                </div>
            )
        }
    </Container>

    {!comingSoon && <PaintedImage
        image={TorontoMapMini}
        pattern={false}
        imageClass="object-top toronto-map"
        alt="Toronto Map for Mostavio aircraft"
    >
        <div
            class="absolute -bottom-2 md:bottom-1/5 right-0 md:right-20 xl:right-52 2xl:right-1/5 flex flex-col items-center justify-center text-white"
        >
            <h2
                style="text-shadow: 2px 2px 8px rgba(0, 0, 0, 0.8);"
                class="text-lg md:text-2xl font-bold text-right"
            >
                DOWNTOWN TORONTO TO<br />YYZ
            </h2>
            <div
                class="rounded-md bg-black space-y-6 max-w-3xl mx-auto px-10 p-6"
            >
                <div
                    class="flex items-center space-x-12 border-b border-gray-600 pb-4"
                >
                    <Image
                        src={EvtolIcon}
                        alt="eVTOL Icon"
                        class="w-10 md:w-20 h-auto object-cover rounded"
                    />
                    <div class="text-center">
                        <p class=" md:text-lg font-semibold">25</p>
                        <p class="text-sm text-gray-400">Distance(km)</p>
                    </div>
                    <div class="text-center">
                        <p class="text-lg font-semibold">{stats?.drone}</p>
                        <p class="text-sm text-gray-400">Time(min)</p>
                    </div>
                </div>

                <div
                    class="flex items-center space-x-12 border-b border-gray-600 pb-4"
                >
                    <Image
                        src={CarIcon}
                        alt="Car Icon"
                        class="w-10 md:w-20 h-auto object-cover rounded"
                    />
                    <div class="text-center">
                        <p class="text-lg font-semibold">28</p>
                        <p class="text-sm text-gray-400">Distance(km)</p>
                    </div>
                    <div class="text-center">
                        <p class="md:text-lg font-semibold">{stats?.car}</p>
                        <p class="text-sm text-gray-400">Time(min)</p>
                    </div>
                </div>

                <div class="flex items-center space-x-12">
                    <Image
                        src={BusIcon}
                        alt="Bus Icon"
                        class="w-8 md:w-18 h-auto object-cover rounded"
                    />
                    <div class="text-center">
                        <p class="md:text-lg font-semibold">29</p>
                        <p class="text-sm text-gray-400">Distance(km)</p>
                    </div>
                    <div class="text-center">
                        <p class="md:text-lg font-semibold">{stats?.bus}</p>
                        <p class="text-sm text-gray-400">Time(min)</p>
                    </div>
                </div>
            </div>
        </div>
    </PaintedImage>}
    {comingSoon && (
        <Headline
            headline="Coming Soon"
            className="mt-32 text-6xl md:text-9xl uppercase text-[#1c1c1c] text-center"
            gradient={false}
        />
        <PaintedImage
            image={EvtolComingSoon}
            alt="Coming Soon Banner"
        />
    )}

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const scrollContainer = document.getElementById('horizontal-scroll-container');
            const leftButton = document.getElementById('scroll-left');
            const rightButton = document.getElementById('scroll-right');
            
            if (!scrollContainer || !leftButton || !rightButton) return;

            const imageWidth = 400; // 384px (w-96) + 16px gap
            const scrollAmount = imageWidth;

            leftButton.addEventListener('click', () => {
                scrollContainer.scrollBy({
                    left: -scrollAmount,
                    behavior: 'smooth'
                });
            });

            rightButton.addEventListener('click', () => {
                scrollContainer.scrollBy({
                    left: scrollAmount,
                    behavior: 'smooth'
                });
            });


            scrollContainer.addEventListener('keydown', (e) => {
                if (e.key === 'ArrowLeft') {
                    e.preventDefault();
                    leftButton.click();
                } else if (e.key === 'ArrowRight') {
                    e.preventDefault();
                    rightButton.click();
                }
            });
        });
    </script>

    <style>
        .scrollbar-hide {
            -ms-overflow-style: none;
            scrollbar-width: none;
        }
        .scrollbar-hide::-webkit-scrollbar {
            display: none;
        }
        
        .scroll-indicator {
            transition: all 0.3s ease-in-out;
        }
        
        .scroll-indicator.bg-white {
            background-color: white;
        }
    </style>
</section>